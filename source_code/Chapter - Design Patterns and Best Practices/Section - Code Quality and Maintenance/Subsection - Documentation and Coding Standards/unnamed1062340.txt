#include <cstdint>
#include <vector>
#include <algorithm>
#include <stdexcept>

// Returns the median of a non-empty vector.
// Throws std::invalid_argument if the input is empty.
double median(std::vector<double> values) {
    if (values.empty())
        throw std::invalid_argument("median requires non-empty container");

    const size_t n = values.size();
    const size_t mid = n / 2;

    std::nth_element(values.begin(), values.begin() + mid, values.end());

    if (n & 1)                       // odd length
        return values[mid];

    // even length: need the largest element in the lower half
    auto upper = values.begin() + mid;
    auto lower = std::max_element(values.begin(), upper);
    return (*lower + *upper) * 0.5;
}