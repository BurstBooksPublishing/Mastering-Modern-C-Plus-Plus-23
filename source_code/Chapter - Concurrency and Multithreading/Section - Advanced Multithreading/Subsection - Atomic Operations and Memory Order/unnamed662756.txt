#include <atomic>
#include <iostream>
#include <thread>

std::atomic<int> data{0};
std::atomic<bool> ready{false};

void producer() {
    data.store(42, std::memory_order_relaxed);
    ready.store(true, std::memory_order_release);   // Publish store to data
}

void consumer() {
    while (!ready.load(std::memory_order_acquire))  // Wait for publication
        ;
    std::cout << "Data: " << data.load(std::memory_order_relaxed) << '\n';
}

int main() {
    std::thread t1(producer);
    std::thread t2(consumer);
    t1.join();
    t2.join();
}