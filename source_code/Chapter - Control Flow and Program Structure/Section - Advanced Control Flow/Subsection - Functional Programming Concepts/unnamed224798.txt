#include <type_traits>
#include <utility>

// C++20 generic, noexcept, SFINAE-friendly square
constexpr auto square = []<typename T>(T&& x) noexcept
    -> std::enable_if_t<std::is_arithmetic_v<std::remove_cvref_t<T>>,
                        std::remove_cvref_t<T>>
{
    using U = std::remove_cvref_t<T>;
    return static_cast<U>(x) * static_cast<U>(x);
};