#include <vector>
#include <initializer_list>
#include <stdexcept>

class ImmutableVector {
public:
    explicit ImmutableVector(std::initializer_list<int> list) : data_(list) {}

    const std::vector<int>& data() const noexcept { return data_; }

    size_t size() const noexcept { return data_.size(); }
    bool empty() const noexcept { return data_.empty(); }

    const int& operator[](size_t idx) const {
        if (idx >= data_.size()) throw std::out_of_range("ImmutableVector index out of range");
        return data_[idx];
    }

private:
    const std::vector<int> data_;
};