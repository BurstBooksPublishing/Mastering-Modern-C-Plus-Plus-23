#include <memory_resource>
#include <vector>
#include <cstddef>

int main() {
    // 64 KiB static buffer for the monotonic resource
    alignas(std::max_align_t) std::byte buffer[64 * 1024];
    std::pmr::monotonic_buffer_resource pool{buffer, sizeof(buffer)};

    // Vector using the monotonic resource
    std::pmr::vector<int> vec{&pool};
    vec.reserve(1000);               // single allocation

    for (int i = 0; i < 1000; ++i) {
        vec.push_back(i);
    }

    return 0;
}