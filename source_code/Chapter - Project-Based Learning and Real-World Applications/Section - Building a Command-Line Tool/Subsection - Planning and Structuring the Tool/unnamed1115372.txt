#include <expected>
#include <filesystem>
#include <fstream>
#include <iostream>
#include <string>

std::expected<std::string, std::string> read_file(const std::filesystem::path& path)
{
    if (!std::filesystem::exists(path))
        return std::unexpected("File does not exist");

    std::ifstream file{path, std::ios::binary | std::ios::ate};
    if (!file)
        return std::unexpected("Cannot open file");

    const auto size = file.tellg();
    if (size == -1)
        return std::unexpected("Cannot determine file size");

    file.seekg(0);
    std::string content(static_cast<size_t>(size), '\0');
    if (!file.read(content.data(), size))
        return std::unexpected("Read failure");

    return content;
}

int main()
{
    const auto result = read_file("input.txt");
    if (result)
        std::cout << *result << '\n';
    else
        std::cerr << "Error: " << result.error() << '\n';
}