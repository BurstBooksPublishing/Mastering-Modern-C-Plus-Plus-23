#include <algorithm>
#include <iostream>
#include <vector>

template <typename Container>
auto find_max(const Container& c) -> typename Container::value_type {
    if (c.empty()) throw std::invalid_argument("empty container");
    return *std::max_element(c.begin(), c.end());
}

template <typename Container>
void print_container(const Container& c) {
    for (const auto& v : c) std::cout << v << ' ';
    std::cout << '\n';
}

int main() {
    const std::vector<int> numbers{3, 1, 4, 1, 5, 9, 2, 6, 5};

    print_container(numbers);
    std::cout << "Max element: " << find_max(numbers) << '\n';
}