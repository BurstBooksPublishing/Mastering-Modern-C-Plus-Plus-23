#include <iostream>
#include <thread>
#include <cstdlib>
#include <iomanip>

int main() {
    std::cout << "__cplusplus: " << __cplusplus << '\n';

#if defined(__clang__)
    std::cout << "Compiler: Clang " << __clang_major__ << '.' << __clang_minor__ << '.' << __clang_patchlevel__ << '\n';
#elif defined(__GNUC__)
    std::cout << "Compiler: GCC " << __GNUC__ << '.' << __GNUC_MINOR__ << '.' << __GNUC_PATCHLEVEL__ << '\n';
#elif defined(_MSC_VER)
    std::cout << "Compiler: MSVC " << (_MSC_VER / 100) << '.' << (_MSC_VER % 100) << '\n';
#else
    std::cout << "Compiler: Unknown\n";
#endif

    if (const char* cxx = std::getenv("CXX")) std::cout << "CXX=" << cxx << '\n';
    if (const char* cc  = std::getenv("CC"))  std::cout << "CC=" << cc << '\n';
    if (const char* ld  = std::getenv("LD_LIBRARY_PATH")) std::cout << "LD_LIBRARY_PATH=" << ld << '\n';

    const unsigned int hw = std::thread::hardware_concurrency();
    std::cout << "hardware_concurrency: " << (hw ? hw : 1u) << '\n';
}