#include <iostream>
#include <format>
#include <limits>

// Compile-time factorial with overflow check
constexpr unsigned long long factorial(int n) noexcept {
    if (n < 0) throw std::invalid_argument("Negative input");
    unsigned long long res = 1;
    for (int i = 2; i <= n; ++i) {
        if (res > std::numeric_limits<unsigned long long>::max() / i)
            throw std::overflow_error("Factorial overflow");
        res *= i;
    }
    return res;
}

int main() {
    try {
        int num = 5;
        std::cout << std::format("Factorial of {} is {}\n", num, factorial(num));
    } catch (const std::exception& ex) {
        std::cerr << ex.what() << '\n';
        return 1;
    }
    return 0;
}