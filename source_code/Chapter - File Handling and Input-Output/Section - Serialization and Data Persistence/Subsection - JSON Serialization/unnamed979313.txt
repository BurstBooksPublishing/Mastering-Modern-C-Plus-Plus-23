#include <fstream>
#include <stdexcept>
#include <nlohmann/json.hpp>

using json = nlohmann::json;

struct Data {
    int id{};
    double value{};
};

void to_json(json& j, const Data& data) {
    j = json{{"id", data.id}, {"value", data.value}};
}

void from_json(const json& j, Data& data) {
    j.at("id").get_to(data.id);
    j.at("value").get_to(data.value);
}

void save(const Data& data, const std::string& filename) {
    std::ofstream ofs(filename, std::ios::trunc);
    if (!ofs) throw std::runtime_error("cannot open file for writing");
    ofs << json(data).dump(4);
}

void load(Data& data, const std::string& filename) {
    std::ifstream ifs(filename);
    if (!ifs) throw std::runtime_error("cannot open file for reading");
    json j;
    ifs >> j;
    from_json(j, data);
}