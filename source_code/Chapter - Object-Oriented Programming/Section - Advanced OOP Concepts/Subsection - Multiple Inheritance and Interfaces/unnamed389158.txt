#include <iostream>
#include <memory>

class A {
public:
    virtual ~A() = default;
    void print() const { std::cout << "A\n"; }
};

class B {
public:
    virtual ~B() = default;
    void print() const { std::cout << "B\n"; }
};

class C : public A, public B {
public:
    void print() const override {
        A::print();
        B::print();
    }
};

int main() {
    std::unique_ptr<C> obj = std::make_unique<C>();
    obj->print();
    return 0;
}