#include <fstream>
#include <future>
#include <string>
#include <vector>

std::future<std::vector<char>> asyncReadFile(const std::string& filename) {
    return std::async(std::launch::async, [filename] {
        std::ifstream file(filename, std::ios::binary | std::ios::ate);
        if (!file) {
            throw std::runtime_error("Failed to open file");
        }

        const std::size_t size = file.tellg();
        if (size == static_cast<std::size_t>(-1)) {
            throw std::runtime_error("Failed to determine file size");
        }

        std::vector<char> buffer(size);
        file.seekg(0);
        file.read(buffer.data(), static_cast<std::streamsize>(size));

        if (!file) {
            throw std::runtime_error("Failed to read file");
        }

        return buffer;
    });
}