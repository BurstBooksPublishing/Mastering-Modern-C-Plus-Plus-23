#include <vector>
#include <stdexcept>

template <typename T>
class Stack {
public:
    void push(const T& value) { elements_.push_back(value); }

    void pop() {
        if (elements_.empty()) throw std::out_of_range("pop on empty stack");
        elements_.pop_back();
    }

    const T& top() const {
        if (elements_.empty()) throw std::out_of_range("top on empty stack");
        return elements_.back();
    }

    bool empty() const noexcept { return elements_.empty(); }

    std::size_t size() const noexcept { return elements_.size(); }

private:
    std::vector<T> elements_;
};